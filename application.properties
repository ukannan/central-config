#Configuration Property File

#Sleuth + Zipkin Properties
spring.sleuth.sampler.percentage = 1.0
spring.zipkin.service.name = ${spring.application.name}
spring.zipkin.base-url = http://zipkin:9411
spring.zipkin.sender.type = web

#Postgres Properties
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=jdbc:postgresql://postgresql
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.default_schema=scb

#Hikari Properties, Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=${spring.application.name}CP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000

# Enable logging for HikariCP to verify that it is used
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG

#Variables
bankcode = SCB
status1 = initiated
status2 = Dupcheck_Cache_Insertion_Succeeded
status3 = Dupcheck_DB_insertion_Succeeded
status4 = Transaction Complete - Duplicate Message
status5 = Validated 
status6 = Transaction Complete - Validation Failed
captureSystem1 = STS
captureSystem2 = DOTOPAL
scbpoc.country = TZ
scbpoc.country.validation = TZ
scbpoc.country.dup = IND

#Mircoservices URL's
HazelCastURL = hazelcast-service:5701
GCGClientURL = http://gcgclient:8080/
APIGatewayURL = http://apigateway:8085/
LandingServiceURL = http://landingservice:8086/
GCGMicroserviceURL = http://gcgmicroservice:8081/
TaxCalcProxyServiceURL = http://taxcalcproxyservice:8082/
ConfigServiceURL = http://configservice:8083/

#Hibernate Properties
hibernate.jdbc.batch_size=10
